//
// COINS Logon Widget styles.
//

//
// COINS Logon Widget settings.
//
// @type map
//
$coins-logon-widget: (
    border-radius: 5px,
    font-family: (Trebuchet, 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif),
    font-size: 14px,
    font-weight: normal,
    line-height: 1.5,
    padding: (.5em 1em),
    transition-duration: 100ms
) !default;

//
// COINS Logon Widget colors.
//
// @type map
//
$coins-logon-widget-colors: (
    active: mix(#dce4e7, #718d99),
    button-primary-background: #364c59,
    button-primary-color: #fff,
    button-secondary-background: #718d99,
    button-secondary-color: #fff,
    error: #ef5a21,
    input-background: #fff,
    input-border: #364c59,
    input-color: #264150,
    input-placeholder: #718d99,
    label: #264150,
    notification-color: #fff,
    success: darken(#b5d345, 12%)
) !default;

/// Micro clearfix
///
/// @access private
/// @output Clearfix styles for the element
@mixin -coins-logon-widget-clearfix {
    &:before,
    &:after {
        content: ' ';
        display: table;
    }
    &:after {
        clear: both;
    }
}

/**
 * Root.
 */
.coins-logon-widget {
    font-family: map-get($coins-logon-widget, 'font-family');
    font-size: map-get($coins-logon-widget, 'font-size');
    font-weight: map-get($coins-logon-widget, 'font-weight');
    line-height: map-get($coins-logon-widget, 'line-height');
    text-align: left;

    /** Make children adhere to 'border-box' spacing */
    *,
    *:before,
    *:after {
        box-sizing: border-box;
    }
}

/* ==========================================================================
   Form Elements
   ========================================================================== */

/**
 * Form.
 *
 * The main `form` element.
 */
.coins-logon-widget-form {
    @include -coins-logon-widget-clearfix;

    font-size: 100%;
    line-height: inherit;
    margin: 0;
    position: relative;
}

/**
 * Form Group.
 *
 * These serve as a wrapper for `label`s and `input`s. Each should be wrapped
 * with this class. These are also the targets for stateful classes.
 */
.coins-logon-widget-form-group {
    margin-bottom: 1em;
    position: relative;
}

/**
 * Label.
 */
.coins-logon-widget-label {
    color: map-get($coins-logon-widget-colors, 'label');
    cursor: pointer;
    display: block;
    font-family: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    margin: 0;
    padding: 0 0 .25em;
    text-align: inherit;
}

/**
 * Input.
 *
 * @todo  Add hooks for more input types.
 */
input[type="password"],
input[type="text"] {
    $background: map-get($coins-logon-widget-colors, 'input-background');
    $border-color: map-get($coins-logon-widget-colors, 'input-border');
    $color: map-get($coins-logon-widget-colors, 'input-color');

    &.coins-logon-widget-input {
        background: $background;
        border-color: $border-color;
        border-radius: map-get($coins-logon-widget, 'border-radius');
        border-style: solid;
        border-width: thin;
        box-shadow: none;
        color: $color;
        display: block;
        font-family: inherit;
        font-size: 100%;
        font-weight: inherit;
        line-height: inherit;
        margin: 0;
        padding: map-get($coins-logon-widget, 'padding');
        transition: box-shadow map-get($coins-logon-widget, 'transition-duration');
        width: 100%;

        &:focus,
        &:hover {
            background: $background;
            border-color: $border-color;
            color: $color;
        }
        &:focus {
            box-shadow: 0 0 0 .25em map-get($coins-logon-widget-colors, 'active');
            outline: none;
        }

        /** Placeholder color */
        $input-placeholder: map-get($coins-logon-widget-colors, 'input-placeholder');

        &::-webkit-input-placeholder {
            color: $input-placeholder;
        }
        &::-moz-placeholder {
            color: $input-placeholder;
        }
        &:-ms-input-placeholder {
            color: $input-placeholder;
        }
    }
}

/**
 * Icons.
 *
 * These are used in conjunction with form states to provide an applicable icon
 * to a form group.
 */
.coins-logon-widget-icon {
    font-size: 100% * map-get($coins-logon-widget, 'line-height');
    line-height: 1;
    padding: .333em 0;
    position: absolute;
    right: 0;
    text-align: center;
    top: 0;
    width: 1.5em;

    &:after {
        display: inline-block;
    }

    .coins-logon-widget-label:not(.coins-logon-widget-visuallyhidden) ~ & {
        top: .75em * map-get($coins-logon-widget, 'line-height');
    }
}

/**
 * Input Message.
 *
 * Placed after the `input` inside the form group. Can be information relating
 * to the `input`, or can be a stateful message.
 */
.coins-logon-widget-input-message {
    display: block;
    font-size: 80%;
    line-height: 1.25;
    margin: .333em 0 0;
    padding-left: nth(map-get($coins-logon-widget, 'padding'), 2) / .8;
}

/* ==========================================================================
   Buttons
   ========================================================================== */

/**
 * Button groups
 *
 * Wrapper for two or more buttons.
 */
.coins-logon-widget-button-group {
    @include -coins-logon-widget-clearfix;

    $horizontal-spacing: nth(map-get($coins-logon-widget, 'padding'), 2);

    margin-bottom: -0.5 * $horizontal-spacing;

    .coins-logon-widget-button {
        float: left;
        margin-right: 0.5 * $horizontal-spacing;
        margin-bottom: 0.5 * $horizontal-spacing;
    }
}

/**
 * Base button.
 *
 * Basic button styling, required by every button. A modifier class ('primary'
 * or 'secondary') is required for proper coloring.
 */
.coins-logon-widget-button {
    border: thin solid transparent;
    border-radius: map-get($coins-logon-widget, 'border-radius');
    cursor: pointer;
    display: inline-block;
    font-family: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    padding: map-get($coins-logon-widget, 'padding');
    text-decoration: none;
    transition-duration: map-get($coins-logon-widget, 'transition-duration');
    transition-property: background, box-shadow, color;

    &:focus {
        box-shadow: 0 0 0 .2em map-get($coins-logon-widget-colors, 'active');
        outline: none;
    }
}

/**
 * Button color modifiers.
 */
@each $variation in primary, secondary {
    .coins-logon-widget-button-#{$variation} {
        $background: map-get($coins-logon-widget-colors, 'button-#{$variation}-background');
        $color: map-get($coins-logon-widget-colors, 'button-#{$variation}-color');
        background: $background;
        color: $color;

        &:focus,
        &:hover,
        &:active {
            background: darken($background, 10%);
            color: $color;
        }
    }
}

/* ==========================================================================
   Notifications
   ========================================================================== */

.coins-logon-widget-notification {
    $color: map-get($coins-logon-widget-colors, 'notification-color');

    border-radius: map-get($coins-logon-widget, 'border-radius');
    color: $color;
    margin-bottom: 1em;
    padding: map-get($coins-logon-widget, 'padding');

    a {
        font-weight: map-get($coins-logon-widget, 'font-weight');
        letter-spacing: 0;
        text-decoration: underline;

        &,
        &:link,
        &:visited,
        &:focus,
        &:hover,
        &:active {
            color: $color;
        }
        &:focus,
        &:hover,
        &:active {
            opacity: .92;
        }
    }
}

@each $state in 'error', 'success' {
    .coins-logon-widget-notification-#{$state} {
        background: map-get($coins-logon-widget-colors, $state);
    }
}

/* ==========================================================================
   Status
   ========================================================================== */

.coins-logon-widget-status {
    color: map-get($coins-logon-widget-colors, 'label');
    float: left;
    line-height: inherit;
    margin: 0;
    padding: .5em nth(map-get($coins-logon-widget, 'padding'), 2) 0 0;
}

/* ==========================================================================
   Indicator
   ========================================================================== */

/**
 * Animating loader indicator using SVG.
 *
 * @{@link  http://codepen.io/jczimm/pen/vEBpoL}
 */
.coins-logon-widget-indicator {
    $width: 40px;

    bottom: 0;
    display: inline-block;
    height: $width;
    left: 0;
    opacity: 0;
    position: absolute;
    width: $width;

    svg {
        animation: rotate 2500ms linear infinite;
        height: $width;
        width: $width;
    }
    circle {
        animation: dash 2000ms ease-in-out infinite;
        stroke: map-get($coins-logon-widget-colors, 'label');
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
        stroke-linecap: round;
    }
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}
@keyframes dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 89, 200;
        stroke-dashoffset: -35;
    }
    100% {
        stroke-dasharray: 89, 200;
        stroke-dashoffset: -124;
    }
}

/* ==========================================================================
   Form States
   ========================================================================== */

%coins-logon-widget-form-group-state {
    .coins-logon-widget-input {
        padding-right: 2em;
    }
}
/// Iterate over
@each $state, $symbol in (error: '✘', success: '✔') {
    .coins-logon-widget-form-group-#{$state} {
        @extend %coins-logon-widget-form-group-state;

        $color: map-get($coins-logon-widget-colors, $state);

        .coins-logon-widget-input {
            border-color: $color;
        }
        .coins-logon-widget-icon {
            color: $color;

            &:after {
                content: $symbol;
            }
        }
        .coins-logon-widget-input-message {
            color: $color;
        }
    }
}

/**
 * Loading.
 *
 * Show the loading indicator.
 */
.coins-logon-widget-form-loading {
    .coins-logon-widget-indicator {
        opacity: 1;
    }
}

/* ==========================================================================
   Helper Classes
   ========================================================================== */

/**
 * Horizontal form.
 *
 * Apply to the root `form.coins-logon-widget-form` to make the form groups and
 * button display horizontally.
 */
.coins-logon-widget-form-horizontal {
    $horizontal-spacing: nth(map-get($coins-logon-widget, 'padding'), 2);

    align-items: flex-start;
    display: flex;
    margin-right: -.5 * $horizontal-spacing;
    margin-left: -.5 * $horizontal-spacing;

    .coins-logon-widget-form-group {
        flex-grow: 2;
        margin-bottom: 0;
        padding-right: .5 * $horizontal-spacing;
        padding-left: .5 * $horizontal-spacing;
    }
    .coins-logon-widget-button {
        flex-grow: 1;
        margin-left: .5 * $horizontal-spacing;
    }
}

/**
 * Status form.
 *
 * Apply to the root `form.coins-logon-widget form` to add proper button styling
 * for a form that displays logon status.
 */
.coins-logon-widget-form-status {
    .coins-logon-widget-button {
        float: left;
    }
}

/**
 * Visually hidden.
 *
 * Hide content but make it accessible for screen readers.
 * http://a11yproject.com/posts/how-to-hide-content/
 */
.coins-logon-widget-visuallyhidden {
    position: absolute !important;
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    padding:0 !important;
    border:0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
}

/**
 * Align left.
 */
.coins-logon-widget-left {
    float: left;
}

/**
 * Align right.
 */
.coins-logon-widget-right {
    float: right;
}
